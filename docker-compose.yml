version: '3.3'

networks:
  metaticket:
services:

  backend:
    container_name: metaticket-backend
    build: backend
    image: bitcoinnanolabs/metaticket-backend
    ports:
      - 8080:3000
    volumes:
      - backend:/usr/src/app
    environment:
      - DB_DIALECT=postgres
      - DB_NAME=metaticket
      - DB_HOST=postgresdb
      - DB_USER=metaticket
      - DB_PASS=metaticketset
      - FRONTEND_URL=https://localhost:8081
      - BACKEND_URL=http://localhost
      - PORT=8080
      - PROXY_PORT=8080
      - JWT_SECRET=3123123213123
      - JWT_REFRESH_SECRET=75756756756
      - REDIS_URI=redis://redis?password=metaticketset
      - REDIS_OPT_LIMITER_MAX=10
      - USER_LIMIT=3000
      - CONNECTIONS_LIMIT=3000
    depends_on:
            - postgresdb
    networks:
      metaticket:
  
  frontend:
    container_name: metaticket-frontend
    ports:
      - 8081:80
      - 8443:443
    build: frontend
    image: bitcoinnanolabs/metaticket-frontend
    environment:
      - URL_BACKEND=backend:3000
      - REACT_APP_BACKEND_URL = http://localhost:8080
      - FRONTEND_SERVER_NAME=frontend
      - BACKEND_SERVER_NAME=backend
    volumes:
      - frontend:/usr/src/app
      - certs:/etc/nginx/ssl/
      - certs:/var/www/letsencrypt/
    depends_on:
            - backend
    networks:
      metaticket:

    


  postgresdb:
    container_name: postgresSQL
    image: postgres:latest
    restart: always
    ports:
       - "5432:5432"
    volumes:
       - postgresSQL:/var/lib/mysql
    environment:
       - POSTGRES_PASSWORD=metaticketset
       - POSTGRES_USER=metaticket
       - POSTGRES_DB=metaticket
    networks:
      metaticket:

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --requirepass metaticketset 
    restart: always
    ports:
       - "6379:6379"    
    volumes:
      - redis:/var/lib/redis
    networks:
      metaticket:
  

volumes:
   postgresSQL: {}
   redis: {}
   frontend: {}
   backend: {}
   certs: {}

